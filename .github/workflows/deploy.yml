name: Deploy to IIS

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --no-restore --configuration Release

    - name: Publish app
      run: dotnet publish --no-build --configuration Release --output ./publish

    - name: Deploy to IIS using Web Deploy
      shell: powershell
      run: |
        $ErrorActionPreference = "Stop"
        
        # Configuration
        $siteName = "data.vonet.org"
        $publishUrl = "${{ secrets.PUBLISH_URL }}"
        $userName = "${{ secrets.PUBLISH_USERNAME }}"
        $password = "${{ secrets.PUBLISH_PASSWORD }}"
        $sourcePath = Join-Path $env:GITHUB_WORKSPACE "publish"
        
        Write-Host "Starting deployment to IIS site: $siteName"
        Write-Host "Source path: $sourcePath"
        Write-Host "Publish URL: $publishUrl"
        
        try {
          # Build MSDeploy arguments
          $msdeployPath = "${env:ProgramFiles}\IIS\Microsoft Web Deploy V3\msdeploy.exe"
          
          # Check if MSDeploy exists
          if (-not (Test-Path $msdeployPath)) {
            $msdeployPath = "${env:ProgramFiles(x86)}\IIS\Microsoft Web Deploy V3\msdeploy.exe"
            if (-not (Test-Path $msdeployPath)) {
              throw "MSDeploy not found. Please ensure Web Deploy is installed on the runner."
            }
          }
          
          $arguments = @(
            "-verb:sync",
            "-source:iisApp=`"$sourcePath`"",
            "-dest:iisApp=`"$siteName`",computername=`"$publishUrl`",username=`"$userName`",password=`"$password`",authtype=`"Basic`"",
            "-allowUntrusted",
            "-enableRule:AppOffline",
            "-retryAttempts:3",
            "-retryInterval:5000",
            "-verbose"
          )
          
          Write-Host "Executing MSDeploy with arguments:"
          Write-Host ($arguments -join " ")
          
          # Execute MSDeploy
          $process = Start-Process -FilePath $msdeployPath -ArgumentList $arguments -Wait -PassThru -NoNewWindow
          
          if ($process.ExitCode -eq 0) {
            Write-Host "✅ Deployment completed successfully!"
          } else {
            throw "MSDeploy failed with exit code: $($process.ExitCode)"
          }
          
        } catch {
          Write-Error "❌ Deployment failed: $($_.Exception.Message)"
          throw
        }

    - name: Verify deployment
      shell: powershell
      run: |
        $siteUrl = "https://${{ secrets.SITE_URL }}" # Add this secret with your site URL
        
        try {
          Write-Host "Verifying deployment by checking site availability..."
          $response = Invoke-WebRequest -Uri $siteUrl -UseBasicParsing -TimeoutSec 30
          
          if ($response.StatusCode -eq 200) {
            Write-Host "✅ Site is responding successfully (Status: $($response.StatusCode))"
          } else {
            Write-Warning "⚠️ Site responded with status: $($response.StatusCode)"
          }
        } catch {
          Write-Warning "⚠️ Could not verify site availability: $($_.Exception.Message)"
          Write-Host "This might be normal if the site requires authentication or specific headers."
        }

name: Deploy to IIS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted # Assumes a Windows self-hosted runner with IIS
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --configuration Release --no-restore

    - name: Deploy to IIS
      shell: powershell
      run: |
        # Define variables
        $appPoolName = "data.vonet.org"
        $publishPath = "C:\inetpub\sites\data.vonet.org"
        $webConfigPath = Join-Path $publishPath "web.config"
        $connectionString = "${{ secrets.CONNECTIONSTRINGS__DEFAULTCONNECTION }}"

        # Check for the secret
        if (-not $connectionString) {
          throw "Secret CONNECTIONSTRINGS__DEFAULTCONNECTION not found."
        }
        
        # Stop the application pool to release file locks
        Write-Host "Stopping App Pool: $appPoolName"
        Stop-WebAppPool -Name $appPoolName
        
        # Publish the application
        Write-Host "Publishing application to $publishPath"
        dotnet publish --configuration Release --no-build --output $publishPath
        
        # Modify web.config to set environment variables
        Write-Host "Updating environment variables in $webConfigPath"
        [xml]$webConfig = Get-Content -Path $webConfigPath
        
        # Find or create the environmentVariables node
        $aspNetCoreNode = $webConfig.configuration.'system.webServer'.aspNetCore
        $envVarsNode = $aspNetCoreNode.environmentVariables
        if (-not $envVarsNode) {
          $envVarsNode = $webConfig.CreateElement("environmentVariables")
          $aspNetCoreNode.AppendChild($envVarsNode)
        }
        
        # Function to set an environment variable node
        function Set-EnvironmentVariableNode($parentNode, $name, $value) {
            $node = $parentNode.SelectSingleNode("environmentVariable[@name='$name']")
            if (-not $node) {
                $node = $parentNode.OwnerDocument.CreateElement("environmentVariable")
                $node.SetAttribute("name", $name)
                $parentNode.AppendChild($node)
            }
            $node.SetAttribute("value", $value)
        }
        
        # Set the environment variables
        Set-EnvironmentVariableNode -parentNode $envVarsNode -name "ASPNETCORE_ENVIRONMENT" -value "Production"
        Set-EnvironmentVariableNode -parentNode $envVarsNode -name "ConnectionStrings__DefaultConnection" -value $connectionString
        
        # Save the updated web.config
        $webConfig.Save($webConfigPath)
        Write-Host "web.config updated successfully."
        
        # Start the application pool
        Write-Host "Starting App Pool: $appPoolName"
        Start-WebAppPool -Name $appPoolName
